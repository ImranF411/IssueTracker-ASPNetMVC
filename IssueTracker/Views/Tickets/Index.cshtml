@*@model IEnumerable<IssueTracker.Models.Ticket>*@
@model IssueTracker.Models.FilterViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Tickets" asp-action="Index" method="get">
    <p>
        <select asp-for="Creator" asp-items="Model.Creators">
            <option value="">All</option>
        </select>

        Search title: <input type="text" name="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Tickets[0].Subject)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tickets[0].CreationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tickets[0].Creator)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tickets[0].SeverityLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tickets[0].Status)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Tickets) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Subject)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreationDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Creator.Name)
            </td>
            <td>
                @{
                    switch (item.SeverityLevel)
                    {
                        case IssueTracker.Enums.SeverityEnum.Critical:
                            <p style="color: red; font: bold">CRITICAL</p>
                            break;

                        case IssueTracker.Enums.SeverityEnum.Important:
                            <p style="color:darkorange; font: bold">Important</p>
                            break;

                        case IssueTracker.Enums.SeverityEnum.Low:
                            <p style="color: blue">Low</p>
                            break;

                        default:
                            <p>Normal</p>
                            break;
                    }
                }
            </td>
            <td>
                @{
                    switch (item.Status)
                    {
                        case IssueTracker.Enums.StatusEnum.Closed:
                            <p style="color: green">Closed</p>
                            break;

                        case IssueTracker.Enums.StatusEnum.AwaitingCustomerResponse:
                            <p>Awaiting Customer Response</p>
                            break;

                        case IssueTracker.Enums.StatusEnum.InDevelopment:
                            <p>In Development</p>
                            break;

                        default:
                            @Html.DisplayFor(modelitem => item.Status)
                            break;
                    }
                }
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
